# /docker-compose.yml
services:
  # --------------------
  # PostgreSQL Database
  # --------------------
  db:
    container_name: nexus_db_service
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}         
      POSTGRES_USER: ${DB_USER}       
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    networks:
      - nexus_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"] 
      interval: 10s
      timeout: 5s
      retries: 5

  # --------------------
  # Node.js Backend API
  # --------------------
  backend:
    container_name: nexus_api_service
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}           
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}             
      - PORT=${BACKEND_PORT}
      - JWT_SECRET=${JWT_SECRET}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    networks:
      - nexus_network
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules

  # --------------------
  # Vite Frontend (comentado por ahora)
  # --------------------
  # frontend:
  #   container_name: nexus_frontend_service
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "${FRONTEND_PORT}:80"
  #   networks:
  #     - nexus_network
  #   depends_on:
  #     - backend
  #   restart: unless-stopped

# --- Network & Volume Definitions ---
networks:
  nexus_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local